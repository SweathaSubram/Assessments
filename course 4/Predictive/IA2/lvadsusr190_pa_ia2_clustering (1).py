# -*- coding: utf-8 -*-
"""LVADSUSR190_PA_IA2_clustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W7KT4nYnWkjmdiDQ_7_adhO5vmr15upH
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.preprocessing import MinMaxScaler, LabelEncoder
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

df = pd.read_csv('/content/Mall_Customers.csv')
df.head()

df.shape

df.info()

df.describe(include="all").T

df.isnull().sum()

df.dropna(inplace = True)
df.isnull().sum()

df['behaviour'] = df["Spending Score (1-100)"]/df["Annual Income (k$)"]
df.head()

df.duplicated().sum()

cor = df.select_dtypes(include = "number").corr()
print("Correlation matrix")
print(cor)
sns.heatmap(cor, annot=True,fmt = ".2f",cmap = "coolwarm")
plt.show()

scaler = MinMaxScaler()
for column in df.select_dtypes(include= "number"):
  df[column] = scaler.fit_transform(df[[column]])
df.head()

sse = []
k_range = range(1,10)
for k in k_range:
  km = KMeans(n_clusters = k)
  km.fit(df[['behaviour','Spending Score (1-100)']])
  sse.append(km.inertia_)
plt.plot(k_range,sse)
plt.show()

score = silhouette_score(df[['behaviour','Spending Score (1-100)']],km.fit_predict(df[['behaviour','Spending Score (1-100)']]))
print(score)

km = KMeans(n_clusters = 3)
pred = km.fit_predict(df[['behaviour','Spending Score (1-100)']])
df['cluster']=pred
df.head()
df[df['cluster']==0] = "Low spending customer"
df[df['cluster']==1] = "Moderate spending customer"
df[df['cluster']==2] = "High spending customer"

print("Cluster Centers")
print(km.cluster_centers_)
df1 = df[df.cluster==0]
df2= df[df.cluster==1]
df3 = df[df.cluster==2]
plt.scatter(df1.behaviour,df1['Spending Score (1-100)'],color = 'red')
plt.scatter(df2.behaviour,df2['Spending Score (1-100)'],color = 'purple')
plt.scatter(df3.behaviour,df3['Spending Score (1-100)'],color = 'yellow')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color = 'black',label="centroid",marker = "X")
plt.legend()
plt.show()

km2 = KMeans(n_clusters = 3)
pred = km2.fit_predict(df[['Age','Spending Score (1-100)']])
df['cluster2']=pred
df.head()

print("Cluster Centers")
print(km2.cluster_centers_)
df1 = df[df.cluster2==0]
df2= df[df.cluster2==1]
df3 = df[df.cluster2==2]
plt.scatter(df1.Age,df1['Spending Score (1-100)'],color = 'red')
plt.scatter(df2.Age,df2['Spending Score (1-100)'],color = 'purple')
plt.scatter(df3.Age,df3['Spending Score (1-100)'],color = 'yellow')
plt.scatter(km2.cluster_centers_[:,0],km2.cluster_centers_[:,1],color = 'black',label="centroid",marker = "X")
plt.legend()
plt.show()

score2 = silhouette_score(df[['Age','Spending Score (1-100)']],km2.fit_predict(df[['Age','Spending Score (1-100)']]))
print(score2)